// Generated by Dagger (https://dagger.dev).
package com.example.weatherapp.di.modules;

import com.example.weatherapp.data.mappers.WeatherMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MappersModule_ProvideWeatherMapperFactory implements Factory<WeatherMapper> {
  private final MappersModule module;

  public MappersModule_ProvideWeatherMapperFactory(MappersModule module) {
    this.module = module;
  }

  @Override
  public WeatherMapper get() {
    return provideWeatherMapper(module);
  }

  public static MappersModule_ProvideWeatherMapperFactory create(MappersModule module) {
    return new MappersModule_ProvideWeatherMapperFactory(module);
  }

  public static WeatherMapper provideWeatherMapper(MappersModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideWeatherMapper());
  }
}
