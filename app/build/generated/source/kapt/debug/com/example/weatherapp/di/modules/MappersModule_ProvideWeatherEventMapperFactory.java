// Generated by Dagger (https://dagger.dev).
package com.example.weatherapp.di.modules;

import com.example.weatherapp.data.mappers.WeatherEventMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MappersModule_ProvideWeatherEventMapperFactory implements Factory<WeatherEventMapper> {
  private final MappersModule module;

  public MappersModule_ProvideWeatherEventMapperFactory(MappersModule module) {
    this.module = module;
  }

  @Override
  public WeatherEventMapper get() {
    return provideWeatherEventMapper(module);
  }

  public static MappersModule_ProvideWeatherEventMapperFactory create(MappersModule module) {
    return new MappersModule_ProvideWeatherEventMapperFactory(module);
  }

  public static WeatherEventMapper provideWeatherEventMapper(MappersModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideWeatherEventMapper());
  }
}
