// Generated by Dagger (https://dagger.dev).
package com.example.weatherapp.di.modules;

import android.app.Application;
import com.example.weatherapp.data.repositories.database.WeatherDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDatabaseFactory implements Factory<WeatherDao> {
  private final DatabaseModule module;

  private final Provider<Application> applicationProvider;

  public DatabaseModule_ProvideDatabaseFactory(DatabaseModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public WeatherDao get() {
    return provideDatabase(module, applicationProvider.get());
  }

  public static DatabaseModule_ProvideDatabaseFactory create(DatabaseModule module,
      Provider<Application> applicationProvider) {
    return new DatabaseModule_ProvideDatabaseFactory(module, applicationProvider);
  }

  public static WeatherDao provideDatabase(DatabaseModule instance, Application application) {
    return Preconditions.checkNotNullFromProvides(instance.provideDatabase(application));
  }
}
