// Generated by Dagger (https://dagger.dev).
package com.example.weatherapp.presentation.citiesactivity.view;

import com.example.weatherapp.presentation.citiesactivity.di.factory.CitiesViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CitiesActivity_MembersInjector implements MembersInjector<CitiesActivity> {
  private final Provider<CitiesViewModelFactory> citiesViewModelFactoryProvider;

  public CitiesActivity_MembersInjector(
      Provider<CitiesViewModelFactory> citiesViewModelFactoryProvider) {
    this.citiesViewModelFactoryProvider = citiesViewModelFactoryProvider;
  }

  public static MembersInjector<CitiesActivity> create(
      Provider<CitiesViewModelFactory> citiesViewModelFactoryProvider) {
    return new CitiesActivity_MembersInjector(citiesViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(CitiesActivity instance) {
    injectCitiesViewModelFactory(instance, citiesViewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.weatherapp.presentation.citiesactivity.view.CitiesActivity.citiesViewModelFactory")
  public static void injectCitiesViewModelFactory(CitiesActivity instance,
      CitiesViewModelFactory citiesViewModelFactory) {
    instance.citiesViewModelFactory = citiesViewModelFactory;
  }
}
