// Generated by Dagger (https://dagger.dev).
package com.example.weatherapp.di.modules;

import com.example.weatherapp.data.mappers.WindMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MappersModule_ProvideWindMapperFactory implements Factory<WindMapper> {
  private final MappersModule module;

  public MappersModule_ProvideWindMapperFactory(MappersModule module) {
    this.module = module;
  }

  @Override
  public WindMapper get() {
    return provideWindMapper(module);
  }

  public static MappersModule_ProvideWindMapperFactory create(MappersModule module) {
    return new MappersModule_ProvideWindMapperFactory(module);
  }

  public static WindMapper provideWindMapper(MappersModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideWindMapper());
  }
}
