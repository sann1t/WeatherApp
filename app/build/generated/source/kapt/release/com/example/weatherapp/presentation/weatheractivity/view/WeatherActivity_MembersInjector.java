// Generated by Dagger (https://dagger.dev).
package com.example.weatherapp.presentation.weatheractivity.view;

import com.example.weatherapp.presentation.factory.ViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherActivity_MembersInjector implements MembersInjector<WeatherActivity> {
  private final Provider<ViewModelFactory> viewModelFactoryProvider;

  public WeatherActivity_MembersInjector(Provider<ViewModelFactory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<WeatherActivity> create(
      Provider<ViewModelFactory> viewModelFactoryProvider) {
    return new WeatherActivity_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(WeatherActivity instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.example.weatherapp.presentation.weatheractivity.view.WeatherActivity.viewModelFactory")
  public static void injectViewModelFactory(WeatherActivity instance,
      ViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
